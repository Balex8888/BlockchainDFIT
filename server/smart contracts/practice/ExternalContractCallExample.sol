// SPDX-License-Identifier: GPL-3.0

// docs at https://docs.soliditylang.org/en/develop/contracts.html#visibility-and-getters
pragma solidity >=0.4.16 <0.9.0;

contract C {
    uint256 public data = 42;
}

contract Caller {
    C c = new C();

    function f() public view returns (uint256) {
        return c.data();
    }
}

/*



// The getter functions have external visibility. If the symbol is accessed internally (i.e. without this.), it evaluates to a state variable. If it is accessed externally (i.e. with this.), it evaluates to a function.


// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.0 <0.9.0;

contract C {
    uint public data;
    function x() public returns (uint) {
        data = 3; // internal access
        return this.data(); // external access
    }
}

*/

/*


// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.16 <0.9.0;

contract arrayExample {
    // public state variable
    uint[] public myArray;

    // Getter function generated by the compiler
    
    function myArray(uint i) public view returns (uint) {
        return myArray[i];
    }
    

    // function that returns entire array
    function getArray() public view returns (uint[] memory) {
        return myArray;
    }
}



*/
